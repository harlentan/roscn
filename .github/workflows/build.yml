# This is a basic workflow that is manually triggered

name: GenerateCNIP

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    
  workflow_dispatch:
  schedule:
    - cron: '30 19 * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      #- name: Setup tmate session
      #  timeout-minutes: 0.5
      #  uses: mxschmitt/action-tmate@v3
      #  with:
          ## limits ssh access and adds the ssh public key for the user which triggered the workflow
      #    limit-access-to-actor: true

      - name: Setup Node and NPM
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'

      
      - name: Initialization environment
        run: sudo apt-get install -y git openssh-client ipcalc grep
      
      - name: Generate
        run: |
          rm *.txt *.rsc 
          bash ./scripts/generate.sh
          bash ./scripts/generate_ros.sh

      - name: Check CN ip list size
        run: |
          if [[ $(wc -l < ./address-list.rsc | xargs) < 3000 || $(wc -l < ./address-list.ipv6.rsc | xargs) < 1000 ]]; then
          echo "The size of ip list is not in the right range!"
          exit 1
          fi

      - name: Check current github event and ref
        run: |
          echo "The current github event is ${{github.event_name}}, git branch is ${{github.ref}}"

      - name: Checkout ip-lists branch
        uses: actions/checkout@v4
        if: github.ref == 'refs/heads/master'
        with:
          ref: ip-lists
          path: ip-lists

      - name: Upload
        if: github.ref == 'refs/heads/master'
        run: |
          rm -rf ip-lists/ros || true
          mkdir ip-lists/ros || true
          mv ./*.rsc ip-lists/ros/
          cd ip-lists
          md5sum ./ros/address-list.rsc | awk '{print $1}' > ./ros/CNIPv4Md5.txt
          md5sum ./ros/address-list.ipv6.rsc | awk '{print $1}' > ./ros/CNIPv6Md5.txt
          if [[ $(git status .) != *"nothing to commit"* ]]; then
            git config user.name GitHub Actions
            git config user.email github-actions@github.com
            git add .
            git commit -m "update $(date +%Y-%m-%d)"
            npm version prerelease
            npm publish
            git push -q
          else
            echo "There is nothing changed since the ip lists have been generated last time."
            echo "Skip roscni version bumping and commit"
          fi
          
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
